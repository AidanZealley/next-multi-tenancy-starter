### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Invite {
  createdAt: DateTime
  dateSent: DateTime
  email: String
  id: String!
  inviteStatus: InviteStatus
  invitedBy: User
  organisation: Organisation
  organisationId: String
  updatedAt: DateTime
  userId: String
}

enum InviteStatus {
  ACCEPTED
  DECLINED
  PENDING
}

type Membership {
  createdAt: DateTime
  id: String!
  organisation: Organisation
  organisationId: String
  role: Role
  updatedAt: DateTime
  user: User
  userId: String
}

type Message {
  createdAt: DateTime
  id: String!
  organisation: Organisation
  organisationId: String
  reactions: [Reaction]
  text: String
  updatedAt: DateTime
  user: User
  userId: String
}

type Mutation {
  addMessage(text: String!): Message!
  deleteMessage(id: String!): Message!
  deleteUser(id: String!): User!
  switchOrganisation(organisationId: String!): User!
  updateMessage(id: String!, text: String!): Message!
  updateUser(id: String!, organisationId: String): User!
}

type Organisation {
  createdAt: DateTime
  id: String!
  invites: [Invite]
  isActive: Boolean
  memberships: [Membership]
  messages: [Message]
  name: String
  owner: User
  reactions: [Reaction]
  selectedBy: [User]
  updatedAt: DateTime
  userId: String
}

type Query {
  allMessages(organisationId: String!): [Message]
  invite(id: String!): Invite
  invites: [Invite]
  loggedInUser: User
  membership(id: String!): Membership
  memberships: [Membership]
  message(id: String!): Message
  organisation(id: String!): Organisation
  organisations: [Organisation]
  reaction(id: String!): Reaction
  reactions: [Reaction]
  user(id: String!): User
  users: [User]
}

type Reaction {
  createdAt: DateTime
  emoji: String
  id: String!
  message: Message
  messageId: String
  organisation: Organisation
  organisationId: String
  text: String
  updatedAt: DateTime
  user: User
  userId: String
}

enum Role {
  ADMIN
  USER
}

type User {
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  id: String!
  image: String
  invitesSent: [Invite]
  memberships: [Membership]
  messages: [Message]
  name: String
  organisationId: String
  ownedOrganisations: [Organisation]
  reactions: [Reaction]
  selectedOrganisation: Organisation
  updatedAt: DateTime
}