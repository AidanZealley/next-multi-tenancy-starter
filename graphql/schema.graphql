### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Comment {
  createdAt: DateTime
  id: String!
  organisation: Organisation
  organisationId: String
  post: Post
  postId: String
  reactions: [Reaction]
  text: String
  updatedAt: DateTime
  user: User
  userId: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Invite {
  createdAt: DateTime
  dateSent: DateTime
  email: String
  id: String!
  inviteStatus: InviteStatus
  invitedBy: User
  organisation: Organisation
  organisationId: String
  updatedAt: DateTime
  userId: String
}

enum InviteStatus {
  ACCEPTED
  DECLINED
  PENDING
}

type Membership {
  createdAt: DateTime
  id: String!
  organisation: Organisation
  organisationId: String
  role: Role
  updatedAt: DateTime
  user: User
  userId: String
}

type Organisation {
  comments: [Comment]
  createdAt: DateTime
  id: String!
  invites: [Invite]
  isActive: Boolean
  memberships: [Membership]
  name: String
  owner: User
  posts: [Post]
  reactions: [Reaction]
  selectedBy: [User]
  updatedAt: DateTime
  userId: String
}

type Post {
  comments: [Comment]
  createdAt: DateTime
  id: String!
  organisation: Organisation
  organisationId: String
  reactions: [Reaction]
  text: String
  updatedAt: DateTime
  user: User
  userId: String
}

type Query {
  comment(id: String!): Comment
  comments: [Comment]
  invite(id: String!): Invite
  invites: [Invite]
  membership(id: String!): Membership
  memberships: [Membership]
  organisation(id: String!): Organisation
  organisations: [Organisation]
  post(id: String!): Post
  posts: [Post]
  reaction(id: String!): Reaction
  reactions: [Reaction]
  user(id: String!): User
  users: [User]
}

type Reaction {
  comment: Comment
  commentId: String
  createdAt: DateTime
  emoji: String
  id: String!
  organisation: Organisation
  organisationId: String
  post: Post
  postId: String
  text: String
  updatedAt: DateTime
  user: User
  userId: String
}

enum Role {
  ADMIN
  USER
}

type User {
  comments: [Comment]
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  id: String!
  image: String
  invitesSent: [Invite]
  memberships: [Membership]
  name: String
  organisationId: String
  ownedOrganisations: [Organisation]
  posts: [Post]
  reactions: [Reaction]
  selectedOrganisation: Organisation
  updatedAt: DateTime
}